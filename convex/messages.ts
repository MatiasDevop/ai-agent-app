import { v } from "convex/values";
import { mutation, query } from "./_generated/server";

export const list = query({
    args: {
        chatId: v.id("chats"),
    },
    handler: async (ctx, args) => {

        const messages = await ctx.db
        .query("messages")
        .withIndex("by_chat", (q) => q.eq("chatId", args.chatId))
        .order("asc")
        .collect();

        return messages;
    },
})

export const create = mutation({
    args: {
        chatId: v.id("chats"),
        content: v.string(),
    },
    handler: async (ctx, args) => {
        // Save the user message with the preserved newLines
        const messageId = await ctx.db.insert("messages", {
            chatId: args.chatId,
            content: args.content.replace(/^\s+|\s+$/g, ""),
            role: "user",
            createdAt: Date.now(),
        });

        return messageId;
    },
});

export const store = mutation({
    args: {
        chatId: v.id("chats"),
        content: v.string(),
        role: v.union(v.literal("user"), v.literal("assistant")),
    },
    handler: async (ctx, args) => {
        // Store message with the preserved newLines and HTML
        const messageId = await ctx.db.insert("messages", {
            chatId: args.chatId,
            content: args.content
            .replace(/\n/g, "\\n")
            // Dont escape HTML - we'all trust the content since it's generated by our own system
            .replace(/\\/g, "\\\\"), // Only escape backslashes
            role: args.role,
            createdAt: Date.now(),
        });

        return messageId;
    },
})

export const getLastMessage = query({
    
})